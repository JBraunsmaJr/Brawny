@page "/Education"
<PageTitle>Education</PageTitle>

<MudGrid Class="school-background">
    <MudItem Class="brawny-hero-content" md="5" Style="margin-top: 10%; margin-left: 10%;">
        <h1>Education</h1>    
    </MudItem>
</MudGrid>

<div style="padding: 0 32px; margin-top: 32px;">
    <MudText Typo="Typo.h2">DeVry University</MudText>
    <MudExpansionPanels MultiExpansion="true">
        <MudExpansionPanel Text="Business Applications Programming w/ Lab">
            <MudTabs Position="Position.Left" 
                     Class="mt-8" 
                     PanelClass="pa-6"
                     ApplyEffectsToContainer="true" 
                     Rounded="true" 
                     Border="true"
                     Outlined="true" Color="Color.Primary"
                     Elevation="3"
                     MaxHeight="300">
                    
                <MudTabPanel Icon="@Icons.Material.Filled.Description" 
                             ToolTip="Course Description"
                             Text="Course Description">
                    <MudText Typo="Typo.body2">
                        Building on analysis, programming, and database skills developed in previous
                        courses, this course introduces fundamental principles and concepts of developing programs
                        that support typical business processing activities and needs such as transaction processing
                        and report generation.
                        Students develop business-oriented programs that deal with error handling, data validation,
                        and file handling. Java is the primary programming language used.
                    </MudText>        
                </MudTabPanel>
                        
                <MudTabPanel Icon="@Icons.Material.Filled.Settings"
                             Text="Final Project">
                    <MudText Typo="Typo.body2">
                        The final project was to fulfill the needs of a made-up business. In this class, it was a landscaping company.
                        It utilized a MySQL backend with a Java based graphical user interface. <br/><br/>
        
                        I was given the freedom to tackle something more interesting, I built an object-relational mapping (ORM) framework
                        for communicating between an app and database! The existing solutions such as hibernate in my opinion were
                        complicated to setup.
                    </MudText>
                </MudTabPanel>
                
                <MudTabPanel Icon="@Icons.Material.Filled.Assignment"
                             Text="Considerations">
                    <MudList >
                        <MudListItem>Must be written in Java</MudListItem>
                        <MudListItem>Prerequisite - MySQL is installed / available on network</MudListItem>
                        <MudListItem>Application should be configurable</MudListItem>
                    </MudList>    
                </MudTabPanel>
                
                <MudTabPanel Icon="@Icons.Material.Filled.AppRegistration"
                             Text="Approach">
                    <MudContainer>
                        <MudText Typo="Typo.h4">Approach</MudText>
                            <MudText Typo="Typo.body2">
                                Being a C# developer, I tried mimicking Microsoft's ORM, EntityFramework. Through many hours of development
                                I got as close as I could get. Unfortunately Java doesn't support generics during runtime. Many sacrifices
                                had to be made in the design to cater to this discovery.
                            </MudText>
                            <MudDivider/>
                            <MudText Typo="Typo.h5">Configuration</MudText>
                            <MudText Typo="Typo.body2">
                                Having written a few enterprise applications, configuration is paramount... not every environment
                                will play nicely! I went with an environment file approach which allowed the developer
                                or user to configure:
                                <MudList>
                                    <MudListItem>Database connection settings</MudListItem>
                                    <MudListItem>Location of log files, along with the log level</MudListItem>
                                    <MudListItem>Storage location</MudListItem>
                                </MudList>
                            </MudText>
                            <MudDivider/>
                            <MudText Typo="Typo.h5">Database</MudText>
                            <MudText Typo="Typo.body2">
                                Given the database connection settings were valid, the ORM created the database and appropriate tables if they
                                did not exist. This reduced the installation process to be a matter of extracting a zip file and
                                launching the Jar file.
                            </MudText>
                    </MudContainer>
                </MudTabPanel>
            </MudTabs>
            

        </MudExpansionPanel>
        <MudExpansionPanel Text="Web Interface Design w/ Lab">
            <MudTabs Position="Position.Left"
                     Class="mt-8"
                     PanelClass="pa-6"
                     ApplyEffectsToContainer="true"
                     Rounded="true"
                     Border="true"
                     Outlined="true" Color="Color.Primary"
                     Elevation="3"
                     MaxHeight="300">
                
                <MudTabPanel Icon="@Icons.Material.Filled.Description"
                             ToolTip="Course Description"
                             Text="Course Description">
                        <MudText Typo="Typo.body2">
                            Introduces fundamentals of web design principles.
                            Topics include user interface, web page conceptualization,
                            page structure, hypertext markup language (HTML5),
                            Cascading Style Sheets (CSS), JavaScript,
                            and web accessibility standards.
                        </MudText>
                </MudTabPanel>

                <MudTabPanel Icon="@Icons.Material.Filled.Settings"
                                             Text="Final Project">
                    <MudText Typo="Typo.body2">
                        Creating this website was part of the final project for this class.
                    </MudText>
                </MudTabPanel>

                <MudTabPanel Icon="@Icons.Material.Filled.Assignment"
                                             Text="Considerations">
                    <MudText Typo="Typo.body2">
                        Hosting site suggested by the school does not support
                        a server architecture. Only static files can be served.
                    </MudText>
                </MudTabPanel>

                <MudTabPanel Icon="@Icons.Material.Filled.AppRegistration"
                             Text="Approach">
                    <MudText Typo="Typo.body2">
                        Being a fan of C# I chose Blazor Web Assembly. The application
                        is served as static files which makes it the perfect candidate!
                        Additionally, C# is my favorite language to work with.
                    </MudText>
                </MudTabPanel>
            </MudTabs>
        </MudExpansionPanel>
    </MudExpansionPanels>
</div>
@code {
    
}