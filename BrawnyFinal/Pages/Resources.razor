@page "/Resources"
@using BrawnyFinal.Models
@using BrawnyFinal.Shared.Components
@inject HttpClient _http
@inject ISnackbar _snackbar
@inject IJSRuntime _runtime 
@inject UrlPreviewService _PreviewService

<PageTitle>Resources</PageTitle>

<MudContainer>
    <MudGrid Spacing="3">
        @foreach (var preview in _resources)
        {
            <UrlPreview Tags="@preview.Tags" PreviewUrl="@preview.Url">
                <Fallback>
                    <MudItem sm="6" md="3">
                        <MudCard>
                            <MudCardHeader>@preview.Title</MudCardHeader>
                            <MudCardContent>@preview.Description</MudCardContent>
                            <MudCardActions>
                                <MudLink Target="_blank"
                                         Typo="Typo.button"
                                         Href="@preview.Url">
                                    Click
                                </MudLink>
                            </MudCardActions>
                        </MudCard>
                    </MudItem>
                </Fallback>
            </UrlPreview>
        }
    </MudGrid>
</MudContainer>

@code {
    List<ResourceItem> _resources = new();
    MudChip<string>[] _selectedChips;
    
    private async Task OnRowClick(TableRowClickEventArgs<ResourceItem> args)
    {
        await _runtime.InvokeVoidAsync("open", args.Item.Url, "_blank");
    }
    
    protected override async Task OnInitializedAsync()
    {
        try
        {
            _resources = (await _http.GetFromJsonAsync<ResourceItem[]>("content/resources.json"))?.ToList() ?? new();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
            _snackbar.Add(ex.Message, Severity.Error);
        }
    }
}